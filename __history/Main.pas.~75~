unit Main;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls, Vcl.StdCtrls, Vcl.Grids,
  Vcl.ValEdit, Vcl.ComCtrls, Vcl.CategoryButtons, Vcl.ToolWin, Vcl.ActnMan,
  Vcl.ActnCtrls, Vcl.Ribbon, Vcl.RibbonLunaStyleActnCtrls, Vcl.ActnList,
  Vcl.Buttons, Vcl.ImgList, Vcl.PlatformDefaultStyleActnCtrls, Vcl.ScreenTips,
  Data, Utils, Variables, Vcl.DBGrids;



type
  TMainForm = class(TForm)
    Ribbon1: TRibbon;
    RibbonPage1: TRibbonPage;
    RibbonGroup1: TRibbonGroup;
    RibbonPage2: TRibbonPage;
    RibbonPage3: TRibbonPage;
    RibbonGroup2: TRibbonGroup;
    RibbonGroup3: TRibbonGroup;
    RibbonGroup4: TRibbonGroup;
    RibbonGroup5: TRibbonGroup;
    RibbonGroup6: TRibbonGroup;
    RibbonGroup7: TRibbonGroup;
    RibbonPage5: TRibbonPage;
    RibbonGroup12: TRibbonGroup;
    RibbonGroup13: TRibbonGroup;
    ActionManager1: TActionManager;
    Action_db_open: TAction;
    action_db_close: TAction;
    Action_exit: TAction;
    ImageList16: TImageList;
    RibbonGroup14: TRibbonGroup;
    Action4: TAction;
    ScreenTipsManager1: TScreenTipsManager;
    action_admin_showhints: TAction;
    StatusBar1: TStatusBar;
    CategoryPanelGroup1: TCategoryPanelGroup;
    CategoryPanel1: TCategoryPanel;
    CategoryPanel2: TCategoryPanel;
    CategoryPanel3: TCategoryPanel;
    CategoryPanel4: TCategoryPanel;
    CategoryPanel5: TCategoryPanel;
    CategoryImageList1: TImageList;
    CategoryPanel6: TCategoryPanel;
    Panel1: TPanel;
    StaticText1: TStaticText;
    Panel2: TPanel;
    StaticText2: TStaticText;
    Panel3: TPanel;
    StaticText3: TStaticText;
    Panel4: TPanel;
    StaticText4: TStaticText;
    Panel5: TPanel;
    StaticText5: TStaticText;
    Panel6: TPanel;
    StaticText6: TStaticText;
    Action1: TAction;
    RibbonGroup15: TRibbonGroup;
    CategoryPanel7: TCategoryPanel;
    CategoryPanel8: TCategoryPanel;
    CategoryPanel9: TCategoryPanel;
    Panel7: TPanel;
    StaticText7: TStaticText;
    Panel8: TPanel;
    StaticText8: TStaticText;
    Panel9: TPanel;
    StaticText9: TStaticText;
    ImageList32: TImageList;
    Action2: TAction;
    Panel10: TPanel;
    DBGrid1: TDBGrid;
    action_s1: TAction;
    action_s2: TAction;
    action_s3: TAction;
    action_s4: TAction;
    action_s5: TAction;
    action_s6: TAction;
    action_s7: TAction;
    action_s8: TAction;
    action_s9: TAction;
    action_s10: TAction;
    procedure Action_exitExecute(Sender: TObject);
    procedure action_admin_showhintsExecute(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure Action_db_openExecute(Sender: TObject);
    procedure action_db_closeExecute(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure CategoryPanel1Expand(Sender: TObject);
    procedure Action1Execute(Sender: TObject);
    procedure Action2Execute(Sender: TObject);
    procedure action_s1Execute(Sender: TObject);
    procedure action_s2Execute(Sender: TObject);
    procedure action_s3Execute(Sender: TObject);
    procedure action_s5Execute(Sender: TObject);
  private
    { Private declarations }
  public
  Procedure UpdateStatus;
  Procedure UpdateRibbon;
    { Public declarations }
  end;

var
  MainForm: TMainForm;

implementation

{$R *.dfm}

procedure TMainForm.Action1Execute(Sender: TObject);
begin
  DM.ShowSprFilials;
end;

procedure TMainForm.Action2Execute(Sender: TObject);
begin
  DM.ShowUsers;
end;

procedure TMainForm.action_admin_showhintsExecute(Sender: TObject);
begin
  MainForm.ShowHint:=Not MainForm.ShowHint;
  action_admin_showhints.Checked:=MainForm.ShowHint;
end;

procedure TMainForm.action_db_closeExecute(Sender: TObject);
begin
  if DM.pDatabaseIsOpen then DM.CloseDatabase;
  UpdateStatus;
  UpdateRibbon;
end;

procedure TMainForm.Action_db_openExecute(Sender: TObject);
begin
  if not DM.pDatabaseIsOpen then DM.OpenDatabase;
  UpdateStatus;
  UpdateRibbon;
end;

procedure TMainForm.Action_exitExecute(Sender: TObject);
begin
   Close;
end;

procedure TMainForm.action_s1Execute(Sender: TObject);
begin
  DM.ShowTownWindow;
end;

procedure TMainForm.action_s2Execute(Sender: TObject);
begin
  DM.ShowPromplWindow;
end;

procedure TMainForm.action_s3Execute(Sender: TObject);
begin
  DM.ShowBuildWindow;
end;

procedure TMainForm.action_s5Execute(Sender: TObject);
begin
  DM.ShowServWindow;
end;

procedure TMainForm.CategoryPanel1Expand(Sender: TObject);
Var i : integer;
    catpanel : TCategoryPanel;
    DeactivatePanel : Integer;

begin
  DeactivatePanel:=ActivePanel;
  ActivePanel:=(sender as TCategoryPanel).Tag;
  for i := 1 to 9 do begin
      catpanel:=(FindComponent('CategoryPanel'+IntToStr(i)) AS TCategoryPanel);
      if i<>ActivePanel then catpanel.Collapse;
  end;
  (FindComponent('Panel'+IntToStr(DeactivatePanel)) AS TPanel).Visible:=false;
  (FindComponent('Panel'+IntToStr(ActivePanel)) AS TPanel).Align:=alClient;
  (FindComponent('Panel'+IntToStr(ActivePanel)) AS TPanel).Visible:=True;
end;

procedure TMainForm.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveWndPos(MainForm);
  DM.CloseDatabase;
end;

procedure TMainForm.FormShow(Sender: TObject);
begin
  GetCurrentResolution;
  action_admin_showhints.Checked:=MainForm.ShowHint;
  SetWndPos(MainForm);
  DM.OpenDatabase;
  UpdateStatus;
  ActivePanel:=panOrgtech;
  CategoryPanelGroup1.CollapseAll;
  (FindComponent('CategoryPanel'+IntToStr(ActivePanel)) AS TCategoryPanel).Expand;
end;

Procedure TMainForm.UpdateStatus;
Begin
  StatusBar1.Panels[0].Text:=DM.pLoginInfo.LoginName+'/'+DM.pLoginInfo.ServerName;
  StatusBar1.Panels[1].Text:='Res:'+ScreenResolution;
  StatusBar1.Panels[2].Text:=intToStr(DM.pFilialInfo.fil_id)+':'+DM.pFilialInfo.fil_code+':'+DM.pFilialInfo.fil_name;

  //  MainForm.StatusBar1.Panels[0].Text:=ActiveUser.name+'/'+ActiveUser.fio+'/'+roles[ActiveUser.mainRole];
//  if pDatabaseIsOpen then
//  StatusBar1.Panels[1].Text:='Записей:'+intToStr(DM.ADOQuery4.RecordCount);
//
end;

Procedure TMainForm.UpdateRibbon;
Begin
  Action_db_open.Enabled:=Not DM.pDatabaseIsOpen;
  Action_db_close.Enabled:=DM.pDatabaseIsOpen;
end;



end.
